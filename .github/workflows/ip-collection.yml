name: Collect and Filter US IPs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  fetch_and_process_ips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch IP list from BestCF
        run: |
          BESTCF_IPS=$(curl -s https://raw.githubusercontent.com/ymyuuu/IPDB/refs/heads/main/BestCF/bestcfv4.txt)
          echo "BESTCF_IPS<<EOF" >> $GITHUB_ENV
          echo "$BESTCF_IPS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Fetch IP list from yxip
        run: |
          YXIP_IPS=$(curl -s https://raw.githubusercontent.com/ethgan/yxip/refs/heads/main/ip.txt)
          echo "YXIP_IPS<<EOF" >> $GITHUB_ENV
          echo "$YXIP_IPS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Process IPs and Filter US Addresses
        run: |
          us_ips=""
          echo "Processing BestCF IPs:"
          grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' <<< "$BESTCF_IPS" | while IFS= read -r ip; do
            # Placeholder for IP geolocation - replace with actual logic
            if [[ "$ip" == *"104."* ]]; then # Example: Assume IPs starting with 104. are US
              us_ips+="${ip}#US美国\n"
              echo "Found US IP (BestCF): ${ip}#US美国"
            fi
          done
          echo "Processing yxip IPs:"
          grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' <<< "$YXIP_IPS" | while IFS= read -r ip; do
            # Placeholder for IP geolocation - replace with actual logic
            if [[ "$ip" == *"104."* ]]; then # Example: Assume IPs starting with 104. are US
              us_ips+="${ip}#US美国\n"
              echo "Found US IP (yxip): ${ip}#US美国"
            fi
          done
          echo "US_IPS<<EOF" >> $GITHUB_OUTPUT
          echo "$us_ips" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: filter_ips

      - name: Display US IPs
        run: |
          echo "--- US IP Addresses ---"
          echo "${{ steps.filter_ips.outputs.US_IPS }}"
          echo "-------------------------"
